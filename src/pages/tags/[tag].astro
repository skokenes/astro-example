---
// x@ts-nocheck
// TODO: figure out why TS isn't working here :(
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  //   GetStaticPaths,
} from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { BlogPost } from "../../components/blog-post";

export async function getStaticPaths() {
  const allPosts = await Astro.glob("../posts/*.mdx");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as { tag: string };
const { posts } = Astro.props as Props;
const filteredPosts = posts.filter((post) =>
  post.frontmatter.tags?.includes(tag)
);
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      filteredPosts.map((post) => (
        <BlogPost link={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
